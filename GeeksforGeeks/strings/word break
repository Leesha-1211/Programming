
class Solution
{
    
    bool lee(unordered_map<string,bool>mp,string word){
        
           int n=word.size();
           if(n==0){
               return true;
           }
          string temp="";
          for(int i=0;i<word.length();i++){
              temp+=word[i];
          
          
          if(mp.find(temp)!=mp.end()&& lee(mp,word.substr(i+1)))
              return true;
         
          }
        
       return false;

    }
    
public:
    int wordBreak(string A, vector<string> &B) {
        unordered_map<string, bool> mp;

        for(int i=0;i<B.size();i++){
            mp[B[i]]=true;
       }

        return lee(mp,A)==true?1:0;
        
    }
};
