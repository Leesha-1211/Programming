class Queue {
  // Define the data members
  Node *head, *tail;
  int size;

public:
  Queue() {
    // Implement the Constructor
    head = NULL;
    tail = NULL;
    size = 0;
  }

  /*----------------- Public Functions of Stack -----------------*/

  int getSize() {
    // Implement the getSize() function
    return size;
  }

  bool isEmpty() {
    // Implement the isEmpty() function
    return head == NULL;
  }

  void enqueue(int data) {
    // Implement the enqueue() function
    Node *temp = new Node(data);
    if (head == NULL) {
      head = temp;
      tail = temp;
    } else {
      tail->next = temp;
      tail = tail->next;
    }
    size++;
  }

  int dequeue() {
    // Implement the dequeue() function
    if (isEmpty())
      return -1;
    Node *temp = NULL;
    int num = head->data;
    if (head == tail) {
      head = NULL;
      tail = NULL;
    } else {
      temp = head->next;
      delete head;
      head = temp;
    }
    size--;
    return num;
  }

  int front() {
    // Implement the front() function
    if (isEmpty())
      return -1;
    return head->data;
  }
};
